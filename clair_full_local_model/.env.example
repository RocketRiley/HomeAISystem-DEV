# Example environment configuration for Clair
#
# Copy this file to `.env` in the project root and edit the values
# to customise your installation.  The `.env` file is read by the
# scripts at runtime via python-dotenv.  You can modify these values
# later using the GUI launcher (ui_launcher.py) or by editing the file
# directly.

# Content filter level: twitch, pg13, enabled, adult, or dev0
FILTER_LEVEL=enabled

# Online mode: set to true to enable calling an online LLM via the
# OpenAI API for replies.  Requires the `openai` package and a valid
# API key below.  When false, Clair will use locally stored example
# lines for her responses.
ONLINE_MODE=false

# Selfâ€‘start: set to false to disable proactive reminders; when true,
# Clair will periodically remind you about due tasks and upcoming
# events without waiting for a wake word.
SELF_START=true

# API key for the OpenAI Chat API.  Only needed when ONLINE_MODE is
# true.  See https://platform.openai.com/ for information about
# obtaining an API key.  Leave blank if you do not wish to enable
# online mode.
OPENAI_API_KEY=

# Model name to use when calling the OpenAI API.  Defaults to
# gpt-3.5-turbo if not set.  You can specify gpt-4o or other models
# depending on your access level.
OPENAI_MODEL=gpt-3.5-turbo

# OSC settings for the VRM avatar.  These values are read by
# osc_bridge_stub.py.  Adjust them to point at your VRM client
# (e.g. VSeeFace) if you wish to drive the avatar from the PAD data.
OSC_HOST=127.0.0.1
OSC_PORT=9000